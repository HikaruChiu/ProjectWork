@{
    ViewBag.Title = "需求工作任務查詢";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/js/plugins/jQuery-File-Upload/css/jquery.fileupload.css" asp-append-version="true" rel="stylesheet" />
<link href="~/js/plugins/jQuery-File-Upload/css/jquery.fileupload-ui.css" asp-append-version="true" rel="stylesheet" />


<div class="wrapper wrapper-content animated fadeInRight">

    <div class="ibox-content">

        <div style="margin-top:10px;" id="WorkLogListTableEventsToolbar">
            新增日期：
            <input type="text" id="startDate" style="height:35px;width:100px;margin-left:5px;margin-top:-32px;border-radius: 6px;border: 1px #cccccc solid; outline: none" onclick="WdatePicker({dateFmt:'yyyy-MM-dd'})">
            —
            <input type="text" id="endDate" style="height:35px;width:100px;margin-left:8px;margin-top:-34px;border-radius: 6px;border: 1px #cccccc solid; outline: none" onclick="WdatePicker({dateFmt:'yyyy-MM-dd'})">
            <input type="text" id="queryKey" placeholder="輸入關鍵字搜尋" style="height:35px;width:170px;margin-left:10px;margin-top:-34px;border-radius: 6px;border: 1px #cccccc solid; outline: none">
            <button type="button" style="width:70px;height:35px;margin-left:20px;margin-top:-3px" id="btnQuery" class="btn btn-info">搜尋</button>
            <button type="button" style="width:100px;height:35px;margin-left:20px;margin-top:-3px" id="btnWorkLogAdd" class="btn btn-dark">任務新增</button>

        </div>
        <table id="WorkLogListTable" data-side-pagination="server" data-sort-order="desc" data-mobile-responsive="true"></table>

    </div>

</div>

<!--新增-->
<div class="modal inmodal" id="AddWorkLogModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="form-label">任務分類：</label>
                    <input class="js-example-data-array-selected text-box" id="AddSortComb" style="width: 200px;" />
                </div>
                <div class="form-group">
                    <label for="AddWorkLogSubject" class="form-label">任務名稱：</label>
                    <input id="AddWorkLogSubject" name="AddWorkLogSubject" class="form-control" type="text" placeholder="請輸入任務名稱" maxlength="50">
                </div>
                <div class="form-group">
                    <label for="AddWorkLogContent" class="form-label">任務說明：</label>
                    <span id="AddWorkLogContentMsg" style="display:none;color:red"></span>
                    <textarea class="form-control" id="AddWorkLogContent" rows="5" onkeyup="words_deal(this);"></textarea>

                </div>
                <div class="form-group" id="divAddWorkLogPriority">
                    <label class="form-label">需求等級：</label>
                    @*<input class="form-check-input" type="radio" name="AddWorkLogPriority" id="AddWorkLogPriority0" value="0">
                        <label class="radio-inline" for="AddWorkLogPriority0">一般</label>
                        <input class="form-check-input" type="radio" name="AddWorkLogPriority" id="AddWorkLogPriority1" value="1">
                        <label class="radio-inline" for="AddWorkLogPriority1">重要</label>
                        <input class="form-check-input" type="radio" name="AddWorkLogPriority" id="AddWorkLogPriority2" value="2">
                        <label class="radio-inline" for="AddWorkLogPriority2">急迫</label>*@

                </div>
                <div class="form-group">
                    <span class="btn btn-success fileinput-button">
                        <span>附件上傳</span>
                        <!-- The file input field used as target for the file upload widget -->
                        <input id="AddWorkLogFile" type="file" name="AddWorkLogFile" multiple>
                    </span>
                    
                    <table role="presentation" class="table table-striped" id="presentationAdd" style="font-size:12px">
                        <tbody class="files"></tbody>
                    </table>
                    <div id="progressAdd" class="progress">
                        <div class="progress-bar progress-bar-info"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="close-model">關閉</button>
                <button type="button" class="btn btn-primary" id="save-model">儲存</button>
            </div>
        </div>
    </div>
</div>

<!--修改-->
<div class="modal inmodal" id="EditWorkLogModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label class="control-label">任務編號：</label>
                    <input id="EditWorkLogNo" name="EditWorkLogNo" v-model="EditWorkLogNo" class="form-control" type="text" disabled>
                </div>
                <div class="form-group">
                    <label class="form-label">任務分類：</label>
                    <input class="js-example-data-array-selected text-box" id="EditSortComb" style="width: 200px;" />
                </div>
                <div class="form-group">
                    <label for="EditWorkLogSubject" class="form-label">任務名稱：</label>
                    <input id="EditWorkLogSubject" name="EditWorkLogSubject" class="form-control" type="text" placeholder="請輸入任務名稱" maxlength="50">
                </div>
                <div class="form-group">
                    <label for="EditWorkLogContent" class="form-label">任務說明：</label>
                    <span id="EditWorkLogContentMsg" style="display:none;color:red"></span>
                    <textarea class="form-control" id="EditWorkLogContent" rows="5" onkeyup="words_deal(this);"></textarea>

                </div>
                <div class="form-group" id="divEditWorkLogPriority">
                    <label class="form-label">需求等級：</label>
                </div>
                <div class="form-group">
                    
                    <table role="presentation" class="table table-striped" id="presentationEdit" style="font-size:12px">
                        <tbody class="files"></tbody>
                    </table>
                    
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="close-model">關閉</button>
                <button type="button" class="btn btn-primary" id="save-model">儲存</button>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("_Detail");

@section Scripts{
    <script src="~/js/plugins/jQuery-File-Upload/js/vendor/jquery.ui.widget.js" asp-append-version="true"></script>
    <script src="~/js/plugins/jQuery-File-Upload/js/jquery.iframe-transport.js" asp-append-version="true"></script>
    <script src="~/js/plugins/jQuery-File-Upload/js/jquery.fileupload.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script type="text/javascript">
        $(function () {

            onReady();
            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();

            //2.初始化Button的點擊事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();

        });

        function words_deal(obj) {

            var curLength = $('#' + obj.id).val().length;
            var maxTextLen = 250;
            if (curLength > maxTextLen) {
                var num = $('#' + obj.id).val().substr(0, maxTextLen);
                $('#' + obj.id).val(num);
                //超過字數限制，多出的字將被移除！
                $('#' + obj.id + 'Msg').html("超過字數" + maxTextLen + "個限制，多出的字將被移除！");
                $('#' + obj.id + 'Msg').show();
            } else {
                $('#' + obj.id + 'Msg').html("");
                $('#' + obj.id + 'Msg').hide();
            }
        }

        var TableInit = function () {
            var oTableInit = new Object();

            //初始化Table

            oTableInit.Init = function () {
                $('#WorkLogListTable')
                    .bootstrapTable({
                        ajax: ajaxRequest,
                        pageNumber: 1,
                        pageSize: 25,
                        pageList: [10, 25, 50, 100],
                        resetOffset: true,
                        search: false,
                        sortable: true,
                        pagination: true,
                        height: $(window).height(),
                        showRefresh: true,
                        showToggle: true,
                        showColumns: false,
                        striped: true,
                        sortOrder: 'desc',
                        clickToSelect: true,
                        singleSelect: true,
                        cache: false,
                        // showPaginationSwitch:true,
                        dataType: "json",
                        iconSize: 'outline',
                        toolbar: '#WorkLogListTableEventsToolbar',
                        icons: {
                            refresh: 'glyphicon-refresh',
                            toggleOff: 'glyphicon-list-alt icon-list-alt',
                            toggleOn: 'glyphicon-list-alt icon-list-alt',
                            columns: 'glyphicon-list'
                        },
                        columns: [
                            { field: 'work_log_no', title: '任務編號', visible: false },
                            {
                                field: 'sortName',
                                title: '任務分類'
                            },
                            {
                                field: 'work_log_subject',
                                title: '任務名稱'
                            },
                            { field: 'work_log_priority_status', title: '需求等級編號', visible: false },
                            {
                                field: 'workLogPriority',
                                title: '需求等級'
                            },
                            { field: 'work_log_status', title: '任務狀態編號', visible: false },
                            {
                                field: 'workLogStatus',
                                title: '任務狀態'
                            },
                            { field: 'work_log_type', title: '任務屬性編號', visible: false },
                            {
                                field: 'workLogType',
                                title: '任務屬性'
                            },
                            {
                                field: 'work_log_adddate',
                                title: '新增時間'
                            },
                            { field: 'operate', title: '管理', align: 'center', halign: 'center', events: operateEvents, formatter: 'operateFormatter' }

                        ],
                        onLoadSuccess: function () {

                        },
                        onToggle: function () {


                        }

                    });
                $(window).resize(function () {

                    $('#WorkLogListTable').bootstrapTable('resetView', { height: $(window).height() });
                });

            }

            return oTableInit;
        }

        // 格式化按钮
        function operateFormatter(value, row, index) {
            if (row.work_log_status != 0) {
                return [

                    '<button type="button" class="btn btn-secondary" style="margin-right:15px;" action-id="worklogDetail" action-name="任務檢視" title="任務檢視"><i class="icon-edit" ></i>&nbsp;查詢</button>'

                ].join('');

            } else {
                return [

                    '<button type="button" class="btn btn-primary" style="margin-right:15px;" action-id="worklogapp" action-name="任務送審" title="任務送審"><i class="icon-edit" ></i>&nbsp;送審</button>',
                    '<button type="button" class="btn btn-mini btn btn-success" style="margin-right:15px;" action-id="worklogassign" action-name="任務指派" title="任務指派"><i class="icon-edit" ></i>&nbsp;指派</button>',
                    '<button type="button" class="btn btn-mini btn-info" style="margin-right:15px;" action-id="worklogedit" action-name="編輯任務" title="編輯任務"><i class="icon-edit" ></i>&nbsp;編輯</button>',
                    '<button type="button" class="btn btn-mini btn-danger" style="margin-right:15px;" action-id="worklogdel" action-name="刪除任務" title="刪除任務"><i class="icon-trash" ></i>&nbsp;删除</button>'

                ].join('');

            }

        }

        //操作監聽事件
        window.operateEvents = {
            //檢視
            'click [action-id=worklogDetail]': function (e, value, row, index) {

                WorkLogDetail(row.work_log_no);
            },
            //送審
            'click [action-id=worklogapp]': function (e, value, row, index) {
                QQT.ajax('/WorkLog/WorkLogFlow',
                    'Post',
                    {
                        WorkLogNo: row.work_log_no,
                        WorkLogStatus: 1
                    }).done(function (response) {
                        $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                        swal("送出成功！", "已送審!", "success");
                    });
            },
            //指派
            'click [action-id=worklogassign]': function (e, value, row, index) {

                WorkLogDetail(row.work_log_no);

                
                //取得我的部門代號
                var myDeptNo = '@ViewBag.UserToken.DeptNo';
                //部門選單
                QQT.ajax('/WorkLog/GetDeptList', 'Post', { deptNo: myDeptNo })
                    .done(function (response) {
                        if (!response || !response.Data) return;
                        var searchList = new Array();

                        $.each(response.Data,
                            function (index, item) {
                                searchList.push({
                                    id: item.deptNo,
                                    text: item.deptName
                                });
                            });

                        //設定select2
                        $('#workLogAssignDeptId').select2({
                            data: searchList,
                            multiple: false
                        }).val(myDeptNo);

                        $('#workLogAssignDeptId').trigger('change');

                    });

                //取得我部門的人員
                QQT.ajax('/WorkLog/GetDeptUsers', 'Post', { deptNo: myDeptNo })
                    .done(function (response) {
                        if (!response || !response.Data) return;
                        var searchList = new Array();

                        $.each(response.Data,
                            function (index, item) {
                                searchList.push({
                                    id: item.indx,
                                    text: item.ChgName + '(' + item.EngName + ')'
                                });
                            });

                        //設定select2
                        $('#workAssignId').select2({
                            data: searchList,
                            placeholder: '請選擇執行人員',
                            multiple: false
                        });

                    });

                $("#divWorkLogNeedDate").show();
                $("#divWorkLogAssign").show();
                $("#assign-model").show();

            },
            //編輯
            'click [action-id=worklogedit]': function (e, value, row, index) {
                //$('#test_Table').bootstrapTable('remove', { field: 'work_log_sort_no', values: [row['work_log_sort_no']] });

                EditWorkLog(row.work_log_no);
            },
            //刪除數據行
            'click [action-id=worklogdel]': function (e, value, row, index) {
                //$('#test_Table').bootstrapTable('remove', { field: 'work_log_sort_no', values: [row['work_log_sort_no']] });
                swal({
                    title: "您確定刪除這個工作任務[" + row.work_log_subject + "]嗎?",
                    text: "請謹慎操作！",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "確定刪除！",
                    cancelButtonText: "再考慮一下…",
                    showLoaderOnConfirm: true,
                    preConfirm: function (isConfirm) {
                        if (isConfirm) {
                            QQT.ajax('/WorkLog/WorkLogDelete',
                                'Post',
                                {
                                    workLogNo: row.work_log_no
                                }).done(function (response) {
                                    $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                                    swal("成功啦！", "已刪除!", "success");
                                });
                        }

                    }
                }).then(function (response) {

                }).catch(function () {
                });
            }
        }


        var ButtonInit = function () {
            var oInit = new Object();
            //檔案上傳元件初始化
            var filesList = [];
            oInit.Init = function () {
                
                $("#WorkLogDetailModal #assign-model").click(function (e) {
                    e.preventDefault();
                    var workLogNo = $("#WorkLogDetailModal #workLogNo").val();
                    var workStartDate = $("#workStartDate").val();
                    var workStartTime = $("#workStartTime").val();
                    var workEndDate = $("#workEndDate").val();
                    var workEndTime = $("#workEndTime").val();
                    var workAssignDeptId = $("#workLogAssignDeptId").val();
                    var workAssignId = $("#workAssignId").val();
                    
                    if (workStartDate == "") {
                        swal({
                            title: "發生錯誤", text: "請輸入開始日期", type: "error"
                        });
                        
                        return;
                    }
                    if (workStartTime == "") {
                        swal({
                            title: "發生錯誤", text: "請輸入開始時間", type: "error"
                        });
                        
                        return;
                    }
                    if (workEndDate == "") {
                        swal({
                            title: "發生錯誤", text: "請輸入結束日期", type: "error"
                        });
                        
                        return;
                    }
                    if (workEndTime == "") {
                        swal({
                            title: "發生錯誤", text: "請輸入結束時間", type: "error"
                        });
                        
                        return;
                    }
                    if (workAssignId == "") {
                        swal({
                            title: "發生錯誤", text: "請選擇執行人員", type: "error"
                        });
                        return;
                    }

                    var workAssignName = $("#workAssignId").select2('data').text;

                    //swal({
                    //    title: "test",
                    //    text: "workLogNo=" + workLogNo + "<br>workAssignId=" + workAssignId +
                    //        "<br>workAssignName=" + workAssignName + "<br>workStartDate=" + workStartDate + "<br>workStartTime=" + workStartTime + 
                    //        "<br>workEndDate=" + workEndDate + "<br>workEndTime=" + workEndTime,
                    //    type: "error"
                    //});

                    //return;

                    swal({
                        title: "確定指派這個工作任務<br>給<span style='color:blue'>" + workAssignName + "<span>嗎?",
                        text: "請謹慎操作！",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "確定指派！",
                        cancelButtonText: "再考慮一下…",
                        showLoaderOnConfirm: true,
                        preConfirm: function (isConfirm) {
                            if (isConfirm) {
                                QQT.ajax('/WorkLog/WorkLogFlow',
                                    'Post',
                                    {
                                        WorkLogNo: workLogNo,
                                        WorkLogAssignDeptId: workAssignDeptId,
                                        WorkLogAssignId: workAssignId,
                                        WorkLogAssignName: workAssignName,
                                        WorkLogStartDate: workStartDate,
                                        WorkLogStartTime: workStartTime,
                                        WorkLogEndDate: workEndDate,
                                        WorkLogEndTime: workEndTime,
                                        WorkLogStatus: 3
                                    }).done(function (response) {
                                        $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                                        swal("送出成功！", "已指派人員<span style='color:blue'>" + workAssignName + "</span>！", "success");
                                    });

                                $('#WorkLogDetailModal').modal('hide');
                            }

                        }
                    }).then(function (response) {

                    }).catch(function () {
                    });

                });

                $("#WorkLogDetailModal #close-model").click(function (e) {
                    $("#WorkLogDetailModal").modal("hide");
                });

                $("#btnQuery").click(function () {
                    $(".bootstrap-table button[name='refresh']")[0].click();
                });

                //var limitMultiFileUploadSize = 1024000000; //10MB
                //var acceptFileTypes = /^(gif|jpe?g|png|pdf|docx?|xlsx?)$/i;

                $('#AddWorkLogFile').fileupload({
                    url: '/WorkLog/WorkLogAdd',
                    autoUpload: false,// 自動上傳False.
                    dataType: 'json',
                    add: function (e, data) { //選擇圖片後會跑入這個事件
                        var errs = [];
                        var acceptFileTypes = /(\.|\/)(gif|jpe?g|png|docx?|xlsx?|pdf)$/i;
                        var maxFileSize = 10 * 1024 * 1024; //10MB

                        // Validate file
                        $.each(data.files, function (index, file) {
                            var fileType = '.' + file.name.split('.').pop();
                            //alert(fileType)
                            if (file.type.length && !acceptFileTypes.test(fileType)) {
                                errs.push('你選擇的檔案 "' + file.name + '" 不符合檔案格式。應上傳 gif/jpg/png/doc/xls/pdf。');
                            }
                            if (this['size'] > maxFileSize) {
                                errs.push('你選擇的檔案 "' + file.name + '" 容量太大有 ' + parseInt(file.size / 1024 / 1024) + 'MB。 應小於 ' + parseInt(maxFileSize / 1024 / 1024) + 'MB。');
                            }
                        });

                        // Output errors or submit data
                        if (errs.length > 0) {
                            //alert('發生錯誤！ ' + errs.join(" "));
                            swal({
                                title: "發生錯誤",
                                text: errs.join(" "),
                                type: "error"
                            });
                            return;
                        } else {

                        }


                        //將圖片讀取出來並且組成Html塞到內容區塊
                        filesList.push(data.files[0]);
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $('#presentationAdd > .files').append(
                                $(
                                    '<tr class="template-upload fade in">' +
                                    /*'<td><span class="preview"><img src="' + e.target.result + '" class="previewImg" /></span></td>' +*/
                                    '<td><p class="name">' + data.files[0].name + '</p><strong class="error text-danger"></strong></td>' +
                                    '<td>' +
                                    '<p class="size">' + parseInt(data.files[0].size / 1024) + 'K</p>' +
                                    //'<div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>' +
                                    '</td>' +
                                    '<td style="text-align:right"><button class="btn btn-warning cancel imgCancel"><span>取消</span></button></td>' +
                                    '</tr>'
                                )
                            );
                        }
                        reader.readAsDataURL(data.files[0]);
                    },
                    progressall: function (e, data) {
                        //控制上傳的時候會跑的進度Bar
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        $('#progressAdd .progress-bar').css(
                            'width',
                            progress + '%'
                        );
                    }
                });

                //檔案取消
                $('body').on('click', '.imgCancel', function () {
                    var target = $(this).parents('tr.template-upload'); //找出要取消的檔案是第幾個
                    filesList.splice(target.index(), 1);  //記得要把filesList中的檔案也移除掉
                    target.remove();
                });

                $("#btnWorkLogAdd").click(function () {
                    AddFormInit(true);
                });


                $('#AddWorkLogModal #close-model').click(function () {
                    AddFormInit(false);
                });

                // submit 註冊 click 事件
                $('#AddWorkLogModal #save-model').on('click', function (e) {

                    e.preventDefault();

                    var AddSortComb = $("#AddSortComb").val();
                    var AddWorkLogSubject = $("#AddWorkLogSubject").val();
                    var AddWorkLogContent = $("#AddWorkLogContent").val();
                    var AddWorkLogPriority = $('input[name*=AddWorkLogPriority]:checked').val();

                    if (AddSortComb == "") {
                        swal({
                            title: "請選擇任務分類！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (AddWorkLogSubject == "") {
                        swal({
                            title: "請輸入任務名稱！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (AddWorkLogContent == "") {
                        swal({
                            title: "請輸入任務說明！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (!AddWorkLogPriority) {
                        swal({
                            title: "請勾選需求等級！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }


                    //判斷filesList,有選圖片才送
                    if (filesList.length > 0) {
                        $('#AddWorkLogFile, .imgCancel, .submit').prop('disabled', true);
                        var newData = {
                            addSortComb: AddSortComb,
                            addWorkLogSubject: AddWorkLogSubject,
                            addWorkLogContent: AddWorkLogContent,
                            addWorkLogPriority: AddWorkLogPriority
                        };
                        var token = null;
                        token = $('#_AntiForgeryTokenId').serializeObject();
                        newData = $.extend(newData, token);
                        // fileupload api: send, 將 filesList 的檔案送至指定的 url.
                        $('#AddWorkLogFile').fileupload('send',
                            {
                                files: filesList,
                                formData: newData
                            })
                            .success(function (result, textStatus, jqXHR) {
                                //呼叫成功Call Back的地方
                                console.log(jqXHR.responseText);
                                console.log(result.Status);
                                console.log(result.Data);
                                if (result.Status == "1") {
                                    swal({
                                        title: "新增任務成功",
                                        text: "",
                                        type: "success"
                                    });
                                } else {
                                    swal({
                                        title: "新增任務失敗",
                                        text: "新增任務失敗：" + result.Data,
                                        type: "error"
                                    });
                                }

                            })
                            .error(function (jqXHR, textStatus, errorThrown) {
                                console.log(jqXHR.responseText);
                                console.log(textStatus);
                                console.log(jqXHR);

                                swal({
                                    title: "新增任務失敗",
                                    text: "新增任務失敗：" + jqXHR.responseText,
                                    type: "error"
                                });
                            })
                            .complete(function (result, textStatus, jqXHR) {
                                //傳送完成後,讓Submit按鈕重新開啟
                                $('#AddWorkLogFile, .imgCancel, .submit').prop('disabled', false);
                                $('#presentationAdd > .files').html('');

                                $('#progressAdd .progress-bar').css('width', '0%');
                                filesList.length = [];

                                $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });

                                AddFormInit(false);

                            });
                    } else {
                        swal({
                            title: "請選擇上傳檔案",
                            text: "",
                            type: "error"
                        });
                    }
                });


                $('#EditWorkLogModal #close-model').click(function () {
                    EditFormInit(false);
                });

                $('#EditWorkLogModal #save-model').on('click', function (e) {

                    e.preventDefault();
                    var EditWorkLogNo = $("#EditWorkLogNo").val();
                    var EditSortComb = $("#EditSortComb").val();
                    var EditWorkLogSubject = $("#EditWorkLogSubject").val();
                    var EditWorkLogContent = $("#EditWorkLogContent").val();
                    var EditWorkLogPriority = $('input[name*=EditWorkLogPriority]:checked').val();
                    if (EditSortComb == "") {
                        swal({
                            title: "請選擇任務分類！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (EditWorkLogSubject == "") {
                        swal({
                            title: "請輸入任務名稱！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (EditWorkLogContent == "") {
                        swal({
                            title: "請輸入任務說明！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }
                    if (!EditWorkLogPriority) {
                        swal({
                            title: "請勾選需求等級！",
                            text: "",
                            type: "error"
                        });
                        return;
                    }

                    QQT.ajax('/WorkLog/WorkLogEdit',
                        'Post',
                        {
                            editWorkLogNo: EditWorkLogNo,
                            editSortComb: EditSortComb,
                            editWorkLogSubject: EditWorkLogSubject,
                            editWorkLogContent: EditWorkLogContent,
                            editWorkLogPriority: EditWorkLogPriority
                        })
                        .done(function (response) {
                            $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                            if (response.Status == "0") {
                                swal({
                                    title: "更新失敗",
                                    text: response.Info,
                                    type: "error"
                                });
                            } else {
                                swal("成功啦！", "修改成功!", "success");
                            }
                            EditFormInit(false);
                        });



                });

            }

            return oInit;
        }

        function EditWorkLog(workLogNo) {
            EditFormInit(true);

            QQT.ajax('/WorkLog/GetWorkLog', 'Post', { workLogNo: workLogNo })
                .done(function (response) {
                    if (!response || !response.Data) return;
                    var data = response.Data[0];
                    $('#EditWorkLogNo').val(workLogNo);
                    $('#EditSortComb').val(data.sortNo).trigger("change");
                    $('#EditWorkLogSubject').val(data.work_log_subject);
                    $('#EditWorkLogContent').val(data.work_log_contents);
                    $('[name=EditWorkLogPriority]').filter('[value=' + data.work_log_priority_status + ']').prop('checked', true);

                });

            QQT.ajax('/WorkLog/GetWorkLogFile', 'Post', { workLogNo: workLogNo })
                .done(function (response) {
                    if (!response || !response.Data) return;

                    $.each(response.Data,
                        function (index, item) {
                            $('#presentationEdit > .files').append(
                                $(
                                    '<tr class="template-upload fade in" fileNo="' + item.work_log_file_no + '">' +
                                    /*'<td><span class="preview"><img src="' + e.target.result + '" class="previewImg" /></span></td>' +*/
                                    '<td><p class="name">' + item.work_log_file_name + '</p><strong class="error text-danger"></strong></td>' +
                                    '<td style="text-align:right"><button class="btn btn-warning cancel" onclick="DelWorkLogFile(' + item.work_log_file_no + ')"><span>刪除</span></button>&nbsp;' +
                                    '<button class="btn btn-primary submit" onclick="DownloadWorkLogFile(' + item.work_log_file_no + ')" style="background-color:#5cb85c;border-color:#4cae4c"><span>下載</span></button></td>' +
                                    '</tr>'
                                )
                            );
                        });

                });
        }


        function AddFormInit(modalstatic) {
            $('#AddSortComb').val(null).trigger('change');
            $('#AddWorkLogSubject').val('');
            $('#AddWorkLogContent').val('');
            $('[name=AddWorkLogPriority]').prop('checked', false);
            $('#presentationAdd > .files').html('');
            if (modalstatic) {
                $('#AddWorkLogModal').modal({ backdrop: 'static', keyboard: false });
                $('#AddWorkLogModal').modal('show');
            } else {
                $('#AddWorkLogModal').modal('hide');
            }
        }

        function EditFormInit(modalstatic) {
            $('#EditSortComb').val(null).trigger('change');
            $('#EditWorkLogSubject').val('');
            $('#EditWorkLogContent').val('');
            $('[name=EditWorkLogPriority]').prop('checked', false);
            $('#presentationEdit > .files').html('');
            if (modalstatic) {
                $('#EditWorkLogModal').modal({ backdrop: 'static', keyboard: false });
                $('#EditWorkLogModal').modal('show');
            } else {
                $('#EditWorkLogModal').modal('hide');
            }
        }


        function ajaxRequest(params) {
            var pageSize = params.data.limit;
            var pageIndex = params.data.offset / params.data.limit + 1;
            var orderBy = params.data.sort;
            var orderSequence = params.data.order;
            QQT.ajax('/WorkLog/GetWorkLogList',
                'POST',
                {
                    pageIndex: pageIndex,
                    pageSize: pageSize,
                    orderBy: orderBy,
                    orderSequence: orderSequence,
                    startDate: $("#startDate").val(),
                    endDate: $("#endDate").val(),
                    queryKey: $("#queryKey").val()
                })
                .done(function (response) {
                    params.success({
                        total: response.Total,
                        rows: response.Rows
                    });
                });

        }

        function DelWorkLogFile(fileNo) {
            swal({
                title: "您確定刪除這個檔案嗎?",
                text: "請謹慎操作！",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "確定刪除！",
                cancelButtonText: "再考慮一下…",
                showLoaderOnConfirm: true,
                preConfirm: function (isConfirm) {
                    if (isConfirm) {
                        QQT.ajax('/WorkLog/WorkLogFileDelete',
                            'Post',
                            {
                                workLogFileNo: fileNo
                            }).done(function (response) {
                                $('#presentationEdit > .files > tr[fileNo=' + fileNo + ']').remove();
                                swal("成功啦！", "已刪除!", "success");
                            });
                    }

                }
            }).then(function (response) {

            }).catch(function () {
            });
        }


        function onReady() {


            //獲取任務分類選單
            QQT.ajax('/WorkLog/GetAllWorkLogSort', 'Post')
                .done(function (response) {
                    if (!response || !response.Data) return;
                    var searchList = new Array();

                    $.each(response.Data,
                        function (index, item) {
                            searchList.push({
                                id: item.sortNo,
                                text: item.sortName
                            });
                        });

                    //設定select2
                    $('#AddSortComb, #EditSortComb').select2({
                        data: searchList,
                        placeholder: '請選擇任務分類',
                        multiple: false
                    });

                });

            //取得需求等級狀態清單
            QQT.ajax('/WorkLog/GetAllWorkLogPriority', 'Post')
                .done(function (response) {
                    if (response == undefined) return;
                    $.each(response.Data,
                        function (index, item) {
                            //動態新增需求等級radio button
                            $("#divAddWorkLogPriority").append('<input class="form-check-input" type="radio" name="AddWorkLogPriority" id="AddWorkLogPriority' + index + '" value="' + index + '">');
                            $("#divAddWorkLogPriority").append('<label class="radio-inline" for="AddWorkLogPriority' + index + '">' + item + '</label>');
                            $("#divEditWorkLogPriority").append('<input class="form-check-input" type="radio" name="EditWorkLogPriority" id="EditWorkLogPriority' + index + '" value="' + index + '">');
                            $("#divEditWorkLogPriority").append('<label class="radio-inline" for="EditWorkLogPriority' + index + '">' + item + '</label>');
                        });

                });

        }

        //當月第一天所對應的日期 yyyy-mm-dd
        function GetLocalMonFrstDayDate() {
            var now = new Date();
            var year = now.getFullYear();//年
            var mon = now.getMonth() + 1;//月
            if (mon < 10) {
                mon = '-0' + mon;
            }
            var frstDay = "-01"; //日
            return year + mon + frstDay;
        }
        //當月最後一天所對應的日期 yyyy-mm-dd
        function GetLocalMonLastDayDate() {
            var now = new Date();
            var year = now.getFullYear();//年
            var mon = now.getMonth() + 1;//月
            if (mon < 10) {
                mon = '-0' + mon;
            }
            var LastDay = "-" + GetDayCountInMon(year + mon);
            return year + mon + LastDay;
        }
        //計算當月對應的最大天數
        function GetDayCountInMon(YearMon) {
            var arr = YearMon.split("-");
            var localYear = parseInt(arr[0]);
            var localMon = parseInt(arr[1]);
            var localDate = new Date(localYear, localMon, 0);
            return localDate.getDate();
        }


    </script>
}