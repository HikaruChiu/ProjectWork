#pragma checksum "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "814381971b63bfc1f6b791619c5e0cb547bbf6e0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_WorkLog_CheckList2), @"mvc.1.0.view", @"/Views/WorkLog/CheckList2.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\MyProject\PJW\PJW\Views\_ViewImports.cshtml"
using PJW.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"814381971b63bfc1f6b791619c5e0cb547bbf6e0", @"/Views/WorkLog/CheckList2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a1b9716aa90c7cef9b5e537ef4f2378438930e99", @"/Views/_ViewImports.cshtml")]
    public class Views_WorkLog_CheckList2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/js/plugins/jQuery-File-Upload/css/jquery.fileupload.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/js/plugins/jQuery-File-Upload/css/jquery.fileupload-ui.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/plugins/jQuery-File-Upload/js/vendor/jquery.ui.widget.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/plugins/jQuery-File-Upload/js/jquery.iframe-transport.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/plugins/jQuery-File-Upload/js/jquery.fileupload.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/site.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
  
    ViewBag.Title = "執行單位任務查詢";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "814381971b63bfc1f6b791619c5e0cb547bbf6e05698", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 5 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "814381971b63bfc1f6b791619c5e0cb547bbf6e07616", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
#nullable restore
#line 6 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<div class=""wrapper wrapper-content animated fadeInRight"">

    <div class=""ibox-content"">

        <div style=""margin-top:10px;"" id=""WorkLogListTableEventsToolbar"">
            新增日期：
            <input type=""text"" id=""startDate"" style=""height:35px;width:100px;margin-left:5px;margin-top:-32px;border-radius: 6px;border: 1px #cccccc solid; outline: none"" onclick=""WdatePicker({dateFmt:'yyyy-MM-dd'})"">
            —
            <input type=""text"" id=""endDate"" style=""height:35px;width:100px;margin-left:8px;margin-top:-34px;border-radius: 6px;border: 1px #cccccc solid; outline: none"" onclick=""WdatePicker({dateFmt:'yyyy-MM-dd'})"">
            <input type=""text"" id=""queryKey"" placeholder=""輸入關鍵字搜尋"" style=""height:35px;width:170px;margin-left:10px;margin-top:-34px;border-radius: 6px;border: 1px #cccccc solid; outline: none"">
            <button type=""button"" style=""width:70px;height:35px;margin-left:20px;margin-top:-3px"" id=""btnQuery"" class=""btn btn-info"">搜尋</button>

        </div>
        <table id=");
            WriteLiteral("\"WorkLogListTable\" data-side-pagination=\"server\" data-sort-order=\"desc\" data-mobile-responsive=\"true\"></table>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n");
#nullable restore
#line 28 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
Write(await Html.PartialAsync("_Detail"));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "814381971b63bfc1f6b791619c5e0cb547bbf6e011100", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
#nullable restore
#line 31 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "814381971b63bfc1f6b791619c5e0cb547bbf6e013032", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
#nullable restore
#line 32 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "814381971b63bfc1f6b791619c5e0cb547bbf6e014964", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
#nullable restore
#line 33 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "814381971b63bfc1f6b791619c5e0cb547bbf6e016896", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
#nullable restore
#line 34 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(function () {

            onReady();
            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();

            //2.初始化Button的點擊事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();

        });

        function words_deal(obj) {

            var curLength = $('#' + obj.id).val().length;
            var maxTextLen = 250;
            if (curLength > maxTextLen) {
                var num = $('#' + obj.id).val().substr(0, maxTextLen);
                $('#' + obj.id).val(num);
                //超過字數限制，多出的字將被移除！
                $('#' + obj.id + 'Msg').html(""超過字數"" + maxTextLen + ""個限制，多出的字將被移除！"");
                $('#' + obj.id + 'Msg').show();
            } else {
                $('#' + obj.id + 'Msg').html("""");
                $('#' + obj.id + 'Msg').hide();
            }
        }

        var TableInit = function () {
            var oTableInit = new Object();

        ");
                WriteLiteral(@"    //初始化Table

            oTableInit.Init = function () {
                $('#WorkLogListTable')
                    .bootstrapTable({
                        ajax: ajaxRequest,
                        pageNumber: 1,
                        pageSize: 25,
                        pageList: [10, 25, 50, 100],
                        resetOffset: true,
                        search: false,
                        sortable: true,
                        pagination: true,
                        height: $(window).height(),
                        showRefresh: true,
                        showToggle: true,
                        showColumns: false,
                        striped: true,
                        sortOrder: 'desc',
                        clickToSelect: true,
                        singleSelect: true,
                        cache: false,
                        // showPaginationSwitch:true,
                        dataType: ""json"",
                        iconSize: 'outli");
                WriteLiteral(@"ne',
                        toolbar: '#WorkLogListTableEventsToolbar',
                        icons: {
                            refresh: 'glyphicon-refresh',
                            toggleOff: 'glyphicon-list-alt icon-list-alt',
                            toggleOn: 'glyphicon-list-alt icon-list-alt',
                            columns: 'glyphicon-list'
                        },
                        columns: [
                            { field: 'work_log_no', title: '任務編號', visible: false },
                            {
                                field: 'sortName',
                                title: '任務分類'
                            },
                            {
                                field: 'work_log_subject',
                                title: '任務名稱'
                            },
                            { field: 'work_log_priority_status', title: '需求等級編號', visible: false },
                            {
                                field");
                WriteLiteral(@": 'workLogPriority',
                                title: '需求等級'
                            },
                            { field: 'work_log_status', title: '任務狀態編號', visible: false },
                            {
                                field: 'workLogStatus',
                                title: '任務狀態'
                            },
                            { field: 'work_log_type', title: '任務屬性編號', visible: false },
                            {
                                field: 'workLogType',
                                title: '任務屬性'
                            },
                            {
                                field: 'work_log_adddate',
                                title: '新增時間'
                            },
                            { field: 'operate', title: '操作', align: 'center', halign: 'center', events: operateEvents, formatter: 'operateFormatter' }

                        ],
                        onLoadSuccess: function () {

 ");
                WriteLiteral(@"                       },
                        onToggle: function () {


                        }

                    });
                $(window).resize(function () {

                    $('#WorkLogListTable').bootstrapTable('resetView', { height: $(window).height() });
                });

            }

            return oTableInit;
        }

        // 格式化按钮
        function operateFormatter(value, row, index) {
            //需求單位主管審核 = 1
            if (row.work_log_status == 2) {
                return [

                    '<button type=""button"" class=""btn btn-success"" style=""margin-right:15px;"" action-id=""worklogassign"" action-name=""執行單位審核"" title=""執行單位審核""><i class=""icon-edit"" ></i>&nbsp;審核</button>'

                ].join('');

            } else if (row.work_log_status != 0) {
                return [

                    '<button type=""button"" class=""btn btn-secondary"" style=""margin-right:15px;"" action-id=""worklogDetail"" action-name=""任務檢視"" title=""任務檢視""><i cla");
                WriteLiteral(@"ss=""icon-edit"" ></i>&nbsp;查詢</button>'

                ].join('');
            }

        }

        //操作監聽事件
        window.operateEvents = {
            //檢視
            'click [action-id=worklogDetail]': function (e, value, row, index) {

                WorkLogDetail(row.work_log_no);
            },
            //指派
            'click [action-id=worklogassign]': function (e, value, row, index) {

                WorkLogDetail(row.work_log_no);

                //取得我的部門代號
                var myDeptNo = '");
#nullable restore
#line 184 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
                           Write(ViewBag.UserToken.DeptNo);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                //部門選單
                QQT.ajax('/WorkLog/GetDeptList', 'Post', { deptNo: myDeptNo })
                    .done(function (response) {
                        if (!response || !response.Data) return;
                        var searchList = new Array();

                        $.each(response.Data,
                            function (index, item) {
                                searchList.push({
                                    id: item.deptNo,
                                    text: item.deptName
                                });
                            });

                        //設定select2
                        $('#workLogAssignDeptId').select2({
                            data: searchList,
                            placeholder: '請選擇部門',
                            multiple: false
                        }).val(myDeptNo);

                        $('#workLogAssignDeptId').trigger('change');

                    });

                //取得我部門的");
                WriteLiteral(@"人員
                QQT.ajax('/WorkLog/GetDeptUsers', 'Post', { deptNo: myDeptNo })
                    .done(function (response) {
                        if (!response || !response.Data) return;
                        var searchList = new Array();

                        $.each(response.Data,
                            function (index, item) {
                                searchList.push({
                                    id: item.indx,
                                    text: item.ChgName + '(' + item.EngName + ')'
                                });
                            });

                        //設定select2
                        $('#workAssignId').select2({
                            data: searchList,
                            placeholder: '請選擇執行人員',
                            multiple: false
                        });

                    });

                $(""#divWorkLogNeedDate"").show();
                $(""#divWorkLogAssignDept"").show();
            ");
                WriteLiteral(@"    $(""#divWorkLogAssign"").show();
                $(""#assign-model"").show();
                $(""#reject-model"").show();
            },

        }

        var ButtonInit = function () {
            var oInit = new Object();
            //檔案上傳元件初始化
            var filesList = [];
            oInit.Init = function () {
                //取得我的部門代號
                var myDeptNo = '");
#nullable restore
#line 248 "D:\MyProject\PJW\PJW\Views\WorkLog\CheckList2.cshtml"
                           Write(ViewBag.UserToken.DeptNo);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                //送審給執行單位
                $(""#WorkLogDetailModal #assign-model"").click(function (e) {
                    e.preventDefault();

                    var workLogNo = $(""#WorkLogDetailModal #workLogNo"").val();
                    var workStartDate = $(""#workStartDate"").val();
                    var workStartTime = $(""#workStartTime"").val();
                    var workEndDate = $(""#workEndDate"").val();
                    var workEndTime = $(""#workEndTime"").val();
                    var workAssignDeptId = $(""#workLogAssignDeptId"").val();
                    var workAssignId = $(""#workAssignId"").val();

                    if (workStartDate == """") {
                        swal({
                            title: ""請輸入開始日期！"", text: """", type: ""error""
                        });

                        return;
                    }
                    if (workStartTime == """") {
                        swal({
                            title: ""請輸入開始時間！"", text: """", type: ""e");
                WriteLiteral(@"rror""
                        });

                        return;
                    }
                    if (workEndDate == """") {
                        swal({
                            title: ""請輸入結束日期！"", text: """", type: ""error""
                        });

                        return;
                    }
                    if (workEndTime == """") {
                        swal({
                            title: ""請輸入結束時間！"", text: """", type: ""error""
                        });

                        return;
                    }
                    
                    if (workAssignId == """") {
                        swal({
                            title: ""請選擇執行人員！"", text: """", type: ""error""
                        });
                        return;
                    }

                    //var workLogAssignDeptName = $(""#workLogAssignDeptId"").select2('data').text;
                    var workAssignName = $(""#workAssignId"").select2('data').text;
              ");
                WriteLiteral(@"      

                    swal({
                        title: ""確定指派這個工作任務<br>給<span style='color:blue'>"" + workAssignName + ""<span>嗎?"",
                        text: ""請謹慎操作！"",
                        type: ""warning"",
                        showCancelButton: true,
                        confirmButtonColor: ""#DD6B55"",
                        confirmButtonText: ""確定指派！"",
                        cancelButtonText: ""再考慮一下…"",
                        showLoaderOnConfirm: true,
                        preConfirm: function (isConfirm) {
                            if (isConfirm) {
                                QQT.ajax('/WorkLog/WorkLogFlow',
                                    'Post',
                                    {
                                        WorkLogNo: workLogNo,
                                        WorkLogAssignDeptId: workAssignDeptId,
                                        WorkLogAssignId: workAssignId,
                                        WorkLogAssignName: work");
                WriteLiteral(@"AssignName,
                                        WorkLogStartDate: workStartDate,
                                        WorkLogStartTime: workStartTime,
                                        WorkLogEndDate: workEndDate,
                                        WorkLogEndTime: workEndTime,
                                        WorkLogStatus: 3
                                    }).done(function (response) {
                                        $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                                        swal(""送出成功！"", ""已指派人員<span style='color:blue'>"" + workAssignName + ""</span>！"", ""success"");
                                    });

                                $('#WorkLogDetailModal').modal('hide');
                            }

                        }
                    }).then(function (response) {

                    }).catch(function () {
                    });


                });

                //退回
           ");
                WriteLiteral(@"     $(""#WorkLogDetailModal #reject-model"").click(function (e) {
                    var workLogNo = $(""#WorkLogDetailModal #workLogNo"").val();
                    //退回處理
                    QQT.ajax('/WorkLog/WorkLogFlow',
                        'POST',
                        {
                            WorkLogNo: workLogNo,
                            WorkLogStatus: 0
                        })
                        .done(function (response) {

                            if (response.Status == ""1"") {
                                $('#WorkLogListTable').bootstrapTable('refresh', { silent: true });
                                swal({
                                    title: ""您已將此工作任務退回"",
                                    text: """",
                                    type: ""success""
                                });

                            } else {
                                swal({
                                    title: ""工作任務退回失敗"",
                         ");
                WriteLiteral(@"           text: ""工作任務退回失敗："" + response.Data,
                                    type: ""error""
                                });
                            }
                        });
                    $(""#WorkLogDetailModal"").modal(""hide"");
                });


                $(""#WorkLogDetailModal #close-model"").click(function (e) {
                    $(""#WorkLogDetailModal"").modal(""hide"");
                });

                $(""#btnQuery"").click(function () {
                    $("".bootstrap-table button[name='refresh']"")[0].click();
                });

            }

            return oInit;
        }


        function ajaxRequest(params) {
            var pageSize = params.data.limit;
            var pageIndex = params.data.offset / params.data.limit + 1;
            var orderBy = params.data.sort;
            var orderSequence = params.data.order;
            QQT.ajax('/WorkLog/GetWorkLogListByStatus',
                'POST',
                {
             ");
                WriteLiteral(@"       pageIndex: pageIndex,
                    pageSize: pageSize,
                    orderBy: orderBy,
                    orderSequence: orderSequence,
                    workLogStatus: 2,
                    startDate: $(""#startDate"").val(),
                    endDate: $(""#endDate"").val(),
                    queryKey: $(""#queryKey"").val()
                })
                .done(function (response) {
                    params.success({
                        total: response.Total,
                        rows: response.Rows
                    });
                });

        }

        function onReady() {


        }


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
