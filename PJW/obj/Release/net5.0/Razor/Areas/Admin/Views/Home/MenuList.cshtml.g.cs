#pragma checksum "D:\MyProject\PJW\PJW\Areas\Admin\Views\Home\MenuList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "42a7e0bcdc1e59d52c5186276e912f2fdb6185c7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Home_MenuList), @"mvc.1.0.view", @"/Areas/Admin/Views/Home/MenuList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"42a7e0bcdc1e59d52c5186276e912f2fdb6185c7", @"/Areas/Admin/Views/Home/MenuList.cshtml")]
    public class Areas_Admin_Views_Home_MenuList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\MyProject\PJW\PJW\Areas\Admin\Views\Home\MenuList.cshtml"
   ViewBag.Title = "選單管理";
    Layout = "~/Views/Shared/_Layout.cshtml"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<style>\r\n\r\n    .modal-dialog {\r\n        width: 800px;\r\n    }\r\n</style>\r\n");
            WriteLiteral(@"

<div class=""wrapper wrapper-content animated fadeInRight"">
    <div class=""ibox float-e-margins"">

        <div class=""ibox-content"">
            <div class=""row row-lg"">
                <div class=""col-sm-12"">

                    <table id=""MenuTable"" data-side-pagination=""server"" data-sort-order=""desc"" data-mobile-responsive=""true""></table>

                </div>
            </div>
        </div>
    </div>
</div>


<div class=""modal inmodal"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 v-if=""add"" class=""modal-title"">新增選單</h4>
                <h1 v-else class=""modal-title"" style=""color: red"">修改選單</h1>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">選單：</label>
                    <input class=""js-example-data-array-selected text-box"" id=""me");
            WriteLiteral(@"nuComb"" style=""width: 350px;"" />
                </div>
                <input type=""hidden"" name=""menuId"" id=""menuId"" />
                <input type=""hidden"" name=""pId"" id=""pId"" />
                <div class=""form-group"">
                    <label class=""control-label"">名稱：</label>
                    <input name=""menuName"" id=""menuName"" class=""form-control"" type=""text"" placeholder=""這裡輸入選單名稱"">
                </div>

                <div class=""form-group"">
                    <label class=""control-label"">地址：</label>
                    <input class=""form-control"" name=""menuUrl"" id=""menuUrl"" type=""text"" placeholder=""這裡輸入鏈接地址,一級選單不用填"">
                </div>

                <div class=""form-group"">
                    <label class=""control-label"">序號：</label>
                    <input class=""form-control"" type=""number"" name=""menuOrder"" id=""menuOrder"" placeholder=""這裡輸入序號"" title=""序號"">
                </div>

                <div class=""form-group"">
                    <label class=""control-");
            WriteLiteral("label\">Class圖示：</label><button type=\"button\" class=\"btn btn-success\" v-on:click=\"_SelectIco\">選擇圖示</button>\r\n                    <input class=\"form-control\" type=\"text\" name=\"menuClass\" id=\"menuClass\" placeholder=\"這裡輸入Ico\"");
            BeginWriteAttribute("value", " value=\"", 5937, "\"", 5945, 0);
            EndWriteAttribute();
            WriteLiteral(@" title=""Class圖示"">
                </div>
                <div class=""form-group"" id=""checkBoxActive"">
                    <label class=""control-label"">選單展示：&nbsp;&nbsp;&nbsp;</label>
                    <input type=""checkbox"" class=""js-switch"" v-model=""currentRow.IsActive"" id=""isActive"" />&nbsp;&nbsp;{{currentRow.IsActive ? ""是"" : ""否""}}
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" id=""close-model"" v-on:click=""_CloseAddMenu"">關閉</button>
                <button type=""button"" class=""btn btn-primary"" id=""save-model"" v-on:click=""_SaveAddMenu"">提交</button>
            </div>
        </div>
    </div>
</div>


");
#nullable restore
#line 151 "D:\MyProject\PJW\PJW\Areas\Admin\Views\Home\MenuList.cshtml"
Write(await Html.PartialAsync("_IconPartial"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">

        var vm = new Vue({
            el: 'body',
            data: {
                add: true,
                currentRow: {},
                parentList: []
            },
            computed: {},
            methods: {
                _toAddMenu: function () {
                    vm.add = true;
                    changeSwitcheryState('isActive', true)
                    $(""#menuUrl"").attr(""readonly"", true);
                    $('#myModal').modal({ backdrop: 'static', keyboard: false });
                    $('#myModal').modal('show');
                },
                _CloseAddMenu: function () {
                    vm.currentRow = {};
                    $('#menuComb').val('0').trigger(""change"");
                    $('#menuId').val('');
                    $('#pId').val('');
                    $('#menuName').val('');
                    $('#menuUrl').val('');
                    $('#menuOrder').val('');
                    $('#men");
                WriteLiteral(@"uClass').val('');
                    $('#myModal').modal('hide');
                },
                _SaveAddMenu: function () {
                    if ($(""#menuName"").val() == """") {

                        swal({
                            title: """",
                            text: ""請輸入選單名稱！"",
                            type: ""error""
                        });
                        return;
                    }
                    if ($(""#menuUrl"").val() == """") {
                        $(""#menuUrl"").val('#');
                    }
                    if ($(""#menuOrder"").val() == """") {

                        swal({
                            title: """",
                            text: ""請輸入選單序號！"",
                            type: ""error""
                        });
                        return;
                    }

                    if (isNaN(Number($(""#menuOrder"").val()))) {

                        swal({
                            title: """",
              ");
                WriteLiteral(@"              text: ""請輸入選單序號！"",
                            type: ""error""
                        });
                        $(""#menuOrder"").val(1);
                        return;
                    }

                    if (vm.add) {

                        QQT.ajax('/Admin/Home/AddMenu',
                            'Post',
                            {
                                ParentTid: $('#menuComb').select2('data') && $('#menuComb').select2('data').id || 0,
                                Name: $('#menuName').val(),
                                Url: $('#menuUrl').val(),
                                OrderRule: $('#menuOrder').val(),
                                Class: $('#menuClass').val(),
                                Tid: $('#menuId').val(),
                                IsActive: vm.currentRow.IsActive
                            })
                            .done(function (response) {
                                swal({
                             ");
                WriteLiteral(@"       title: '成功',
                                    text: ""提交成功"",
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '知道了!'
                                }).then((result) => {
                                    location.reload();
                                });

                            });
                    } else {
                        QQT.ajax('/Admin/Home/UpdateMenu',
                            'Post',
                            {
                                ParentTid: $('#menuComb').select2('data') && $('#menuComb').select2('data').id || 0,
                                Name: $('#menuName').val(),
                                Url: $('#menuUrl').val(),
                                OrderRule: $('#menuOrder').val");
                WriteLiteral(@"(),
                                Class: $('#menuClass').val(),
                                Tid: $('#menuId').val(),
                                IsActive: vm.currentRow.IsActive
                            })
                            .done(function (response) {
                                swal({
                                    title: '成功',
                                    text: ""提交成功"",
                                    type: 'success',
                                    showCancelButton: false,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: '知道了!'
                                }).then((result) => {
                                    location.reload();
                                });
                            });
                    }

                },
                _SelectIco: function () {
                    $(");
                WriteLiteral(@"'#iconModel').modal('show');
                }
            },
            ready: function () {
                //auth();
                //onReady();
                //initSwitchery();
                //changeSwitcheryState('isActive', true);
            }
        });

        $(function () {
            auth();
            onReady();
            initSwitchery();
            changeSwitcheryState('isActive', true);


            var $table = $('#MenuTable');
            $table.bootstrapTable({
                ajax: ajaxRequest,
                dataType: 'json',
                height: $(window).height(),
                striped: true,

                columns: [
                    { field: 'Tid', title: '編號', align: 'center' },
                    { field: 'name', title: '名稱', align: 'left', formatter: 'MenuNameFormatter' },
                    { field: 'Url', title: '資源路徑' },
                    { field: 'OrderRule', title: '排序' },
                    { field: 'Level', title: '層");
                WriteLiteral(@"級' },
                    { field: 'Operate', title: '管理', align: 'center', events: operateEvents, formatter: 'operateFormatter' },
                ],

                onLoadSuccess: function (data) {

                    //$table.treegrid({
                    //    initialState: 'collapsed',// 所有節點都折叠
                    //    // initialState: 'expanded',// 所有节点都展开，默认展开
                    //    treeColumn: 1,
                    //    //expanderExpandedClass: 'glyphicon glyphicon-minus',  //图标样式
                    //    //expanderCollapsedClass: 'glyphicon glyphicon-plus',
                    //    onChange: function () {
                    //        $table.bootstrapTable('resetWidth');
                    //    }
                    //});
                    //只展開第一個節點
                    //$table.treegrid('getRootNodes').treegrid('expand');

                }
            });

            $(window).resize(function () {
                $('#MenuTable').bootstrapTable('resetView', { ");
                WriteLiteral(@"height: $(window).height() });
            });


        });

        // 格式化名稱
        function MenuNameFormatter(value, row, index) {
            let menuName = '';

            if (row.Class != '') {
                menuName = '<i class=""' + row.Class + '"">' + value + '</span>';

            } else {
                menuName = value;
            }

            if (row.Level == 2) {
                menuName = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + menuName;
            }
            if (row.Level == 3) {
                menuName = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + menuName;
            }

            return menuName;
        }

        // 格式化按钮
        function operateFormatter(value, row, index) {
            return [
                '<button type=""button"" class=""btn btn-small btn-success"" style=""margin-right:15px;""><i class=""fa fa-plus"" ></i>&nbsp;新增</button>',
                '<button type=""butt");
                WriteLiteral(@"on"" class=""btn btn-mini btn-info"" style=""margin-right:15px;""><i class=""fa fa-pencil-square-o"" ></i>&nbsp;修改</button>',
                '<button type=""button"" class=""btn btn-mini btn-danger"" style=""margin-right:15px;""><i class=""fa fa-trash-o"" ></i>&nbsp;删除</button>'
            ].join('');

        }


        //初始化操作按钮的方法
        window.operateEvents = {
            'click .btn-success': function (e, value, row, index) {
                add(row.id);
            },
            'click .btn-danger': function (e, value, row, index) {
                del(row.id);
            },
            'click .btn-info': function (e, value, row, index) {
                update(row.id);
            }
        };

        function ajaxRequest(params) {

            QQT.ajax('/Admin/Home/GetAllMenus', 'POST')
                .done(function (response) {
                    params.success({
                        total: response.Total,
                        rows: response.Rows
                    });
 ");
                WriteLiteral(@"               });

        }

        function onReady() {

            //獲取全部父級選單
            QQT.ajax('/Admin/Home/GetAllParentMenus', 'Post')
                .done(function (response) {
                    if (!response || !response.Data) return;

                    vm.parentList = response.Data;
                    //var searchList = new Array();
                    //searchList.push({id:0,text:'頂級選單'});
                    //           $.each(response.Data,
                    //               function (index, item) {
                    //                   searchList.push({
                    //                       id: item.Tid,
                    //                       text: item.name
                    //                   });
                    //               });


                });

            QQT.ajax('/Admin/Home/GetLv1And2Menus', 'Post')
                .done(function (response) {
                    if (!response || !response.Data) return;
            ");
                WriteLiteral(@"        //vm.parentList = response.Data;
                    var searchList = new Array();
                    searchList.push({ id: 0, text: '頂級選單' });
                    $.each(response.Data,
                        function (index, item) {
                            searchList.push({
                                id: item.Tid,
                                text: item.Level == 2 ? "" ----- "" + item.name : item.name
                            });
                        });

                    //設定select2
                    $('#menuComb').select2({
                        data: searchList,
                        placeholder: '請選擇',
                        multiple: false
                    });
                    $('#menuComb').val('0').trigger(""change"");
                    $('#menuComb').on(""change"", function (e) {
                        setMUR(e.added);
                    });
                });

            $('.fa-hover').click(function () { icoSelect(this) });
       ");
                WriteLiteral(@"     $('.bs-glyphicons-list li').click(function () { icoSelectLi(this) });
        }



        function setMUR(item, url) {
            if (!item || item.id === 0) {
                $(""#menuUrl"").attr(""readonly"", true);
                if (url) {
                    $(""#menuUrl"").val(url);
                } else {
                    $(""#menuUrl"").val('');
                }
                $(""#form-field-radio1"").attr(""disabled"", false);
                $(""#form-field-radio2"").attr(""disabled"", false);
            } else {
                $(""#menuUrl"").attr(""readonly"", false);
                $(""#form-field-radio1"").attr(""disabled"", true);
                $(""#form-field-radio2"").attr(""disabled"", true);
                $(""#form-field-radio1"").attr(""checked"", false);
                $(""#form-field-radio2"").attr(""checked"", false);
            }
        }


        //修改
        function editMenu(menuId) {
            QQT.ajax('/Admin/Home/GetEditMenu', 'Post', { Tid: menuId })
        ");
                WriteLiteral(@"        .done(function (response) {
                    var menu = response.Data;
                    $('#menuId').val(menu.Tid);
                    $('#menuComb').val(menu.ParentTid).trigger(""change"");
                    $('#pId').val(menu.ParentTid);
                    $('#menuName').val(menu.name);
                    $('#menuUrl').val(menu.Url);
                    $('#menuOrder').val(menu.OrderRule);
                    $('#menuClass').val(menu.Class);
                    vm.add = false;
                    changeSwitcheryState('isActive', menu.IsActive);
                    setMUR($('#menuComb').select2('data'), menu.Url);
                    $('#myModal').modal({ backdrop: 'static', keyboard: false });
                    $('#myModal').modal('show');
                });
        }


        function delMenu(menuId, isParent) {
            var msg = isParent ? '確定要刪除該選單嗎？其下子選單將一併刪除！' : ""確定要刪除該選單嗎？"";

            swal({
                title: msg,
                text: ""請謹慎操作！"",");
                WriteLiteral(@"
                type: ""warning"",
                showCancelButton: true,
                confirmButtonColor: ""#DD6B55"",
                confirmButtonText: ""是的，確定刪除！"",
                cancelButtonText: ""讓我再考慮一下…"",
                showLoaderOnConfirm: true,
                preConfirm: function (isConfirm) {
                    if (isConfirm) {
                        QQT.ajax('/Admin/Home/DisableMenu',
                            'Post',
                            {
                                menuTid: menuId
                            })
                            .done(function (response) {
                                swal(""成功啦！"", ""該選單刪除成功!"", ""success"");
                                setTimeout(""location.reload()"", 100);
                            });
                    }
                }
            }).then(function () {

            }).catch(function () {

            });

        }

        function openClose(menuId, curObj, trIndex) {
            trIndex = pars");
                WriteLiteral(@"eInt(trIndex, 10);
            var txt = $(curObj).text();
            if (txt == ""展開"") {
                $(curObj).text(""摺疊"");
                $(""#tr_"" + menuId).after(""<tr id='tempTr"" + menuId + ""'><td colspan='5'>數據載入中</td></tr>"");
                if (trIndex % 2 == 0) {
                    $(""#tempTr"" + menuId).addClass(""main_table_even"");
                }

                QQT.ajax('/Admin/Home/GetSubMenu',
                    'Post',
                    {
                        menuTid: menuId
                    })
                    .done(function (response) {
                        var data = response.Data;
                        if (data && data.length > 0) {
                            var html = """";
                            $.each(data,
                                function (i) {
                                    html = ""<tr class='center' style='height:24px;line-height:24px;' name='subTr"" +
                                        menuId +
                        ");
                WriteLiteral(@"                ""'>"";
                                    html += ""<td></td>"";
                                    html += ""<td class='center'><span style='width:80px;display:inline-block;'></span>"";
                                    if (i == data.length - 1)
                                        html += ""<img src='"" +
                                            window.appUrl +
                                            ""/image/joinbottom.gif' style='vertical-align: middle;'/>"";
                                    else
                                        html += ""<img src='"" +
                                            window.appUrl +
                                            ""/image/join.gif' style='vertical-align: middle;'/>"";
                                    html += ""<span style='width:100px;text-align:left;display:inline-block;"" + (!this.IsActive ? ""color:red"" : """") +
                                        ""' class='"" + this.Class + ""'"" + "">&nbsp;"" +
                          ");
                WriteLiteral(@"              this.name +
                                        ""</span>"";
                                    html += ""</td>"";
                                    html += ""<td>"" + this.Url + ""</td>"";
                                    html += ""<td class='center'>"" + this.OrderRule + ""</td>"";
                                    html +=
                                        ""<td>"" +
                                        //""<a class='btn btn-mini btn-warning authorization' action-id='menu-expend' action-name='展開選單' onclick=\""openClose('"" + this.Tid + ""',this,'"" + i + ""')\"">展開</a>"" +
                                        ""<a class='btn btn-mini btn-info authorization' action-id='menu-edit' title='編輯' onclick='editMenu("" +
                                        this.Tid +
                                        "")'><i class='icon-edit'></i></a> <a class='btn btn-mini btn-danger authorization' action-id='menu-del' title='刪除' onclick='delMenu(\"""" +
                                        this.T");
                WriteLiteral(@"id +
                                        ""\"",false)'><i class='icon-trash'></i></a></td>"";
                                    html += ""</tr>"";
                                    $(""#tempTr"" + menuId).before(html);
                                });
                            $(""#tempTr"" + menuId).remove();
                            if (trIndex % 2 == 0) {
                                $(""tr[name='subTr"" + menuId + ""']"").addClass(""main_table_even"");
                            }

                            //重新檢查許可權
                            auth();
                        } else {
                            $(""#tempTr"" + menuId + "" > td"").html(""沒有相關數據"");
                        }
                    });

            } else {
                $(""#tempTr"" + menuId).remove();
                $(""tr[name='subTr"" + menuId + ""']"").remove();
                $(curObj).text(""展開"");
            }
        }

        function icoSelect(ele) {
            var ico = $(ele).find('i').at");
                WriteLiteral(@"tr('class');
            $('#menuClass').val(ico);
            $('#iconModel').modal('hide');
        }

        function icoSelectLi(ele) {
            var ico = $(ele).find('span').attr('class');
            $('#menuClass').val(ico);
            $('#iconModel').modal('hide');
        }

    </script>
    <script>


        function add(id) {
            changeSwitcheryState('isActive', true)
            $(""#menuUrl"").attr(""readonly"", true);
            $('#myModal').modal({ backdrop: 'static', keyboard: false });
            $('#myModal').modal('show');
        }
        function del(id) {
            delMenu(id);
        }
        function update(id) {
            editMenu(id);
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
